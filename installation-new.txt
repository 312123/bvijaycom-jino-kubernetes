create machines like below

node1 --> 2 CPU ,4 GB RAM
node2 --> 2 CPU, 4GB RAM
node3 --> 2 CPU, 4GB RAM
node4 --> 2 CPU, 4GB RAM

node1 is going to be the kubenetes master
node2,node3,node4 going to be nodes

in all the nodes run the following command



Install Docker Engine (run all the nodes)
---------------------

# apt-get update && apt-get install -y apt-transport-https curl
# curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
# cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
# apt-get update
# apt-get install -y kubelet kubeadm kubectl 
# apt-mark hold kubelet kubeadm kubectl 

Install Docker packages (run all the nodes)
---------------------------

# apt-get update && apt-get install apt-transport-https ca-certificates curl software-properties-common -y

# curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -

# add-apt-repository \
  "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) \
  stable"

# apt-get update && apt-get install docker-ce=18.06.2~ce~3-0~ubuntu -y

# cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

# mkdir -p /etc/systemd/system/docker.service.d

# Restart docker.
# systemctl daemon-reload
# systemctl restart docker

*********************************************************************************
run this below command in only node1.coz we are going to make node1 as kube master

# kubeadm init --apiserver-advertise-address $(hostname -i) --pod-network-cidr=192.168.0.0/16
# mkdir -p $HOME/.kube
# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
# sudo chown $(id -u):$(id -g) $HOME/.kube/config
# export kubever=$(kubectl version | base64 | tr -d '\n')

https://www.weave.works/docs/net/latest/kubernetes/kube-addon/ (kube proxy addons installation)


# kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"



verify:

# kubectl get nodes
# kubectl get pods --all-namespaces
# kubectl get nodes --show-lables
# kubectl get namespaces

Recreate tokens: (if i want to add one more new linux machine then use the below command to add it to the kube cluster)
---------------
# kubeadm token create --print-join-command 
(you get some output from this command.
copy that command and paste it to node4 and execute it.
This will help you to add manually any new node to the kube cluster)

****************************

#kubectl version
#kubectl cluster-info
#kubectl get pods -n kube-system
#kubectl get events

master convert to node
----------------------

kubectl taint nodes --all node-role.kubernetes.io/master-

***************************************************************************************************************


execute all playbooks in the below manner to get you loud better....

1. create name space

https://github.com/FourTimes/Kubernetes/blob/master/namespace/namespace.yaml

2. create pods...

https://github.com/FourTimes/Kubernetes/blob/master/pod/1-singlepod.yml
https://github.com/FourTimes/Kubernetes/blob/master/pod/2-multipods.yml
https://github.com/FourTimes/Kubernetes/blob/master/pod/3-storage.yml
https://github.com/FourTimes/Kubernetes/blob/master/pod/4-multistorage.yml
https://github.com/FourTimes/Kubernetes/blob/master/pod/5-full.yaml

find out the below yaml file is deployed to which name space

https://github.com/FourTimes/Kubernetes/blob/master/pod/6-example.yml

3. services

https://github.com/FourTimes/Kubernetes/blob/master/service/loadbalancer-facebook.yaml
https://github.com/FourTimes/Kubernetes/blob/master/service/loadbalancer-twiiter.yaml

the above loadbalancer yaml will work only if you have the nodes in google cloud.because you will have the public ip.

https://github.com/FourTimes/Kubernetes/blob/master/service/nodeport-facebook.yaml
https://github.com/FourTimes/Kubernetes/blob/master/service/nodeport-twitter.yaml

4. Replica set

https://github.com/FourTimes/Kubernetes/blob/master/replicaset/1-singlereplica.yml
https://github.com/FourTimes/Kubernetes/blob/master/replicaset/2-singlepod-singlereplica.yml
https://github.com/FourTimes/Kubernetes/blob/master/replicaset/3-multireplica.yaml
https://github.com/FourTimes/Kubernetes/blob/master/replicaset/4-singlepod-singlereplica-error.yaml
https://github.com/FourTimes/Kubernetes/blob/master/replicaset/5-replica-nodeport.yml

5. Deployments


